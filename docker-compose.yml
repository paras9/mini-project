
services:
  db:
    image: postgres:14  # Use a specific version instead of latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: devices
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s  # Increased interval to allow more time for DB to start
      timeout: 10s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:6.0  # Use a specific version
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/pgadmin4/ || exit 1"]
      interval: 10s
      retries: 3
    networks:
      - app-network

  app:
    build:
      context: .
    container_name: go-app
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  test:
    build:
      context: .
    container_name: go-test
    command: ["go", "test", "-v"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:  # Define the volume to persist data
  app-logs:
